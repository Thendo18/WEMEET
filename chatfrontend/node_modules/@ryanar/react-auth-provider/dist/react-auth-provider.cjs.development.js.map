{"version":3,"file":"react-auth-provider.cjs.development.js","sources":["../src/usePrevious.ts","../src/AuthContext.tsx","../src/AuthProvider.tsx"],"sourcesContent":["import React from 'react';\n\nexport function usePrevious<T = any>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = React.useRef<T>();\n\n  // Store current value in ref\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React from 'react';\n\nexport type IAuthContext = {\n  authenticated: boolean;\n  setAuthenticated: (isAuthenticated: boolean) => void;\n};\n\n/* istanbul ignore next */\nconst noop = () => {};\n\nexport const AuthContext = React.createContext<IAuthContext>({\n  authenticated: false,\n  setAuthenticated: noop,\n});\n","import React from 'react';\nimport { usePrevious } from './usePrevious';\nimport { AuthContext } from './AuthContext';\n\nexport type AuthProviderProps = {\n  defaultAuthenticated?: boolean;\n  onLogin?: () => void;\n  onLogout?: () => void;\n};\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({\n  defaultAuthenticated = false,\n  onLogin,\n  onLogout,\n  children,\n}) => {\n  const [authenticated, setAuthenticated] = React.useState(\n    defaultAuthenticated\n  );\n\n  const previousAuthenticated = usePrevious(authenticated);\n\n  React.useEffect(() => {\n    if (!previousAuthenticated && authenticated) {\n      onLogin && onLogin();\n    }\n  }, [previousAuthenticated, authenticated, onLogin]);\n\n  React.useEffect(() => {\n    if (previousAuthenticated && !authenticated) {\n      onLogout && onLogout();\n    }\n  }, [previousAuthenticated, authenticated, onLogout]);\n\n  const contextValue = React.useMemo(\n    () => ({\n      authenticated,\n      setAuthenticated,\n    }),\n    [authenticated]\n  );\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n"],"names":["usePrevious","value","ref","React","useRef","useEffect","current","noop","AuthContext","createContext","authenticated","setAuthenticated","AuthProvider","defaultAuthenticated","onLogin","onLogout","children","useState","previousAuthenticated","contextValue","useMemo","Provider"],"mappings":";;;;;;SAEgBA,YAAqBC;;;MAG7BC,GAAG,GAAGC,KAAK,CAACC,MAAN,EAAZ;;EAGAD,KAAK,CAACE,SAAN,CAAgB;IACdH,GAAG,CAACI,OAAJ,GAAcL,KAAd;GADF,EAEG,CAACA,KAAD,CAFH;;;SAKOC,GAAG,CAACI,OAAX;;;ACNF;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,KAAb;;AAEA,IAAaC,WAAW;;AAAGL,KAAK,CAACM,aAAN,CAAkC;EAC3DC,aAAa,EAAE,KAD4C;EAE3DC,gBAAgB,EAAEJ;CAFO,CAApB;;ICAMK,YAAY,GAAgC,SAA5CA,YAA4C;mCACvDC;MAAAA,0DAAuB;MACvBC,eAAAA;MACAC,gBAAAA;MACAC,gBAAAA;;wBAE0Cb,KAAK,CAACc,QAAN,CACxCJ,oBADwC;MAAnCH;MAAeC;;MAIhBO,qBAAqB,GAAGlB,WAAW,CAACU,aAAD,CAAzC;EAEAP,KAAK,CAACE,SAAN,CAAgB;QACV,CAACa,qBAAD,IAA0BR,aAA9B,EAA6C;MAC3CI,OAAO,IAAIA,OAAO,EAAlB;;GAFJ,EAIG,CAACI,qBAAD,EAAwBR,aAAxB,EAAuCI,OAAvC,CAJH;EAMAX,KAAK,CAACE,SAAN,CAAgB;QACVa,qBAAqB,IAAI,CAACR,aAA9B,EAA6C;MAC3CK,QAAQ,IAAIA,QAAQ,EAApB;;GAFJ,EAIG,CAACG,qBAAD,EAAwBR,aAAxB,EAAuCK,QAAvC,CAJH;MAMMI,YAAY,GAAGhB,KAAK,CAACiB,OAAN,CACnB;WAAO;MACLV,aAAa,EAAbA,aADK;MAELC,gBAAgB,EAAhBA;KAFF;GADmB,EAKnB,CAACD,aAAD,CALmB,CAArB;SASEP,mBAAA,CAACK,WAAW,CAACa,QAAb;IAAsBpB,KAAK,EAAEkB;GAA7B,EAA4CH,QAA5C,CADF;CAhCK;;;;;"}