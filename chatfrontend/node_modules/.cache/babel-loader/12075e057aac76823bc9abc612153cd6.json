{"ast":null,"code":"/* eslint-disable max-classes-per-file */\nconst {\n  InlineTextBuilder\n} = require('./inline-text-builder');\n\nclass StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.next = next;\n  }\n\n  getRoot() {\n    return this.next ? this.next : this;\n  }\n\n}\n\nclass BlockStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let leadingLineBreaks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let maxLineLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n\n}\n\nclass TableStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n\n}\n\nclass TableRowStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n\n}\n\nclass TableCellStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let maxColumnWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n\n}\n\nclass TransformerStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let transform = arguments.length > 1 ? arguments[1] : undefined;\n    super(next);\n    this.transform = transform;\n  }\n\n}\n\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem\n};","map":{"version":3,"names":["InlineTextBuilder","require","StackItem","constructor","next","getRoot","BlockStackItem","options","leadingLineBreaks","maxLineLength","undefined","inlineTextBuilder","rawText","stashedLineBreaks","isPre","TableStackItem","rows","TableRowStackItem","cells","TableCellStackItem","maxColumnWidth","TransformerStackItem","transform","module","exports"],"sources":["/Users/thendo/Desktop/WEMEET/node_modules/html-to-text/lib/stack-item.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nconst { InlineTextBuilder } = require('./inline-text-builder');\n\n\nclass StackItem {\n  constructor (next = null) { this.next = next; }\n\n  getRoot () { return (this.next) ? this.next : this; }\n}\n\nclass BlockStackItem extends StackItem {\n  constructor (options, next = null, leadingLineBreaks = 1, maxLineLength = undefined) {\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableRowStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableCellStackItem extends StackItem {\n  constructor (options, next = null, maxColumnWidth = undefined) {\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TransformerStackItem extends StackItem {\n  constructor (next = null, transform) {\n    super(next);\n    this.transform = transform;\n  }\n}\n\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem,\n};\n"],"mappings":"AAAA;AAEA,MAAM;EAAEA;AAAF,IAAwBC,OAAO,CAAC,uBAAD,CAArC;;AAGA,MAAMC,SAAN,CAAgB;EACdC,WAAW,GAAe;IAAA,IAAbC,IAAa,uEAAN,IAAM;IAAE,KAAKA,IAAL,GAAYA,IAAZ;EAAmB;;EAE/CC,OAAO,GAAI;IAAE,OAAQ,KAAKD,IAAN,GAAc,KAAKA,IAAnB,GAA0B,IAAjC;EAAwC;;AAHvC;;AAMhB,MAAME,cAAN,SAA6BJ,SAA7B,CAAuC;EACrCC,WAAW,CAAEI,OAAF,EAA0E;IAAA,IAA/DH,IAA+D,uEAAxD,IAAwD;IAAA,IAAlDI,iBAAkD,uEAA9B,CAA8B;IAAA,IAA3BC,aAA2B,uEAAXC,SAAW;IACnF,MAAMN,IAAN;IACA,KAAKI,iBAAL,GAAyBA,iBAAzB;IACA,KAAKG,iBAAL,GAAyB,IAAIX,iBAAJ,CAAsBO,OAAtB,EAA+BE,aAA/B,CAAzB;IACA,KAAKG,OAAL,GAAe,EAAf;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKC,KAAL,GAAaV,IAAI,IAAIA,IAAI,CAACU,KAA1B;EACD;;AARoC;;AAWvC,MAAMC,cAAN,SAA6Bb,SAA7B,CAAuC;EACrCC,WAAW,GAAe;IAAA,IAAbC,IAAa,uEAAN,IAAM;IACxB,MAAMA,IAAN;IACA,KAAKY,IAAL,GAAY,EAAZ;IACA,KAAKF,KAAL,GAAaV,IAAI,IAAIA,IAAI,CAACU,KAA1B;EACD;;AALoC;;AAQvC,MAAMG,iBAAN,SAAgCf,SAAhC,CAA0C;EACxCC,WAAW,GAAe;IAAA,IAAbC,IAAa,uEAAN,IAAM;IACxB,MAAMA,IAAN;IACA,KAAKc,KAAL,GAAa,EAAb;IACA,KAAKJ,KAAL,GAAaV,IAAI,IAAIA,IAAI,CAACU,KAA1B;EACD;;AALuC;;AAQ1C,MAAMK,kBAAN,SAAiCjB,SAAjC,CAA2C;EACzCC,WAAW,CAAEI,OAAF,EAAoD;IAAA,IAAzCH,IAAyC,uEAAlC,IAAkC;IAAA,IAA5BgB,cAA4B,uEAAXV,SAAW;IAC7D,MAAMN,IAAN;IACA,KAAKO,iBAAL,GAAyB,IAAIX,iBAAJ,CAAsBO,OAAtB,EAA+Ba,cAA/B,CAAzB;IACA,KAAKR,OAAL,GAAe,EAAf;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKC,KAAL,GAAaV,IAAI,IAAIA,IAAI,CAACU,KAA1B;EACD;;AAPwC;;AAU3C,MAAMO,oBAAN,SAAmCnB,SAAnC,CAA6C;EAC3CC,WAAW,GAA0B;IAAA,IAAxBC,IAAwB,uEAAjB,IAAiB;IAAA,IAAXkB,SAAW;IACnC,MAAMlB,IAAN;IACA,KAAKkB,SAAL,GAAiBA,SAAjB;EACD;;AAJ0C;;AAO7CC,MAAM,CAACC,OAAP,GAAiB;EACflB,cAAc,EAAEA,cADD;EAEfJ,SAAS,EAAEA,SAFI;EAGfiB,kBAAkB,EAAEA,kBAHL;EAIfF,iBAAiB,EAAEA,iBAJJ;EAKfF,cAAc,EAAEA,cALD;EAMfM,oBAAoB,EAAEA;AANP,CAAjB"},"metadata":{},"sourceType":"script"}