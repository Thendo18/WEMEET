{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      if (this.serverResponse_) {\n        return this.message_ + '\\n' + this.serverResponse_;\n      } else {\n        return this.message_;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\n\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n/**\r\n * @struct\r\n */\n\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\n\n\nfunction isDef(p) {\n  return p != null;\n}\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isObject(p) {\n  return typeof p === 'object';\n}\n\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\n\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @enum{number}\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\n\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\n\n\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\n\n\nvar ArgSpec =\n/** @class */\nfunction () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n\n      validator(p);\n    };\n\n    this.optional = !!optional;\n  }\n\n  return ArgSpec;\n}();\n\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n\n  var chainedValidator;\n\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n\n  return new ArgSpec(chainedValidator, optional);\n}\n\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\n\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\n\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n\n  return new ArgSpec(validator);\n}\n\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n\n  return new ArgSpec(validator, optional);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, service, location, mappings, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this.promise_.then(null, function () {});\n  }\n\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this.request_ !== null) {\n      return;\n    }\n\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this.service_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var createRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\n\n      var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n\n        _this.updateProgress_(status.current);\n\n        _this.needToFetchStatus_ = false;\n\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n\n        _this.transition_(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n\n        _this.request_ = null;\n\n        _this.updateProgress_(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\n\n      var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n\n      var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\n\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n\n        _this.updateProgress_(_this.blob_.size());\n\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n\n        if (!anyDefined) {\n          throw '';\n        }\n\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n\n      nextOrObserverValidator(p);\n    }\n\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(service, location) {\n    this.service = service;\n\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n\n\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n\n\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  Reference.prototype.delete = function () {\n    var _this = this;\n\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.service, _this.location);\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n\n\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4\n            /*yield*/\n            , this.list(opt)];\n\n          case 1:\n            nextPage = _c.sent();\n\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n            if (!(nextPage.nextPageToken != null)) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this.listAllHelper(accumulator, nextPage.nextPageToken)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n\n\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.service.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.service, self.location,\n      /*delimiter= */\n      '/', op.pageToken, op.maxResults);\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n\n\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n\n\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n\n        return url;\n      });\n    });\n  };\n\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false; // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  } // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @struct\r\n * @template T\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\n\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(app, authProvider, pool, url) {\n    var _a;\n\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\n    }\n\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  StorageService.extractBucket_ = function (config) {\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n    if (bucketString == null) {\n      return null;\n    }\n\n    return Location.makeFromBucketSpec(bucketString);\n  };\n\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this.authProvider_.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  StorageService.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(function (request) {\n      return request.cancel();\n    });\n    this.requests_.clear();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return A firebaseStorage.Reference.\r\n   */\n\n\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this.deleted_) {\n      var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\n      this.requests_.add(request_1); // Request removes itself from set when complete.\n\n      request_1.getPromise().then(function () {\n        return _this.requests_.delete(request_1);\n      }, function () {\n        return _this.requests_.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n\n  StorageService.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n\n    validate('ref', [stringSpec(validator, true)], arguments);\n\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    var ref = new Reference(this, this.bucket_);\n\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageService.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.maxUploadRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxUploadRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.maxOperationRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxOperationRetryTime_ = time;\n  };\n\n  Object.defineProperty(StorageService.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StorageService;\n}();\n/**\r\n * @struct\r\n */\n\n\nvar ServiceInternals =\n/** @class */\nfunction () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   */\n\n\n  ServiceInternals.prototype.delete = function () {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  };\n\n  return ServiceInternals;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new StorageService(app, authProvider, new XhrIoPool(), url);\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/type.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/tasksnapshot.ts","../src/implementation/args.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../src/implementation/failrequest.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../index.ts"],"names":["errorsExports.unknown","errorsExports.invalidFormat","errorsExports.internalError","type.isDef","type.isNativeBlobDefined","type.isNativeBlob","fs.sliceBlob","fs.getBlob","type.isString","errorsExports.invalidDefaultBucket","errorsExports.invalidUrl","type.isNonArrayObject","path.lastComponent","json.jsonObjectOrNull","UrlUtils.makeUrl","UrlUtils.makeQueryString","type.isObject","type.isNonNullObject","type.isInteger","MetadataUtils.fromResourceString","ListResultUtils.fromResponseString","MetadataUtils.downloadUrlFromResourceString","MetadataUtils.toResourceString","type.isFunction","errorsExports.invalidArgumentCount","errorsExports.invalidArgument","type.isJustDef","MetadataUtils.metadataValidator","ListOptionsUtils.listOptionsValidator","type.isNumber","fbsRequests.createResumableUpload","fbsRequests.getResumableUploadStatus","fbsRequests.resumableUploadChunkSize","fbsRequests.ResumableUploadStatus","fbsRequests.continueResumableUpload","fbsRequests.getMetadata","fbsRequests.multipartUpload","typeUtils.isJustDef","fbsAsync","metadata.getMappings","path.child","path.parent","requests.deleteObject","requests.list","requests.getMetadata","requests.updateMetadata","requests.getDownloadUrl","errorsExports.noDownloadURL","errorsExports.invalidRootOperation","backoff.start","backoff.stop","constants.DEFAULT_MAX_OPERATION_RETRY_TIME","constants.DEFAULT_MAX_UPLOAD_RETRY_TIME","constants.CONFIG_STORAGE_BUCKET_KEY","errorsExports.appDeleted","args.validate","args.stringSpec","args.nonNegativeNumberSpec"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null): void {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    if (this.serverResponse_) {\n      return this.message_ + '\\n' + this.serverResponse_;\n    } else {\n      return this.message_;\n    }\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: unknown): void {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw (\n        'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].'\n      );\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef<T>(p: T | null | undefined): p is T {\n  return p != null;\n}\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: unknown): p is { [key: string]: unknown } | null {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: unknown): p is object {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isInteger(p: unknown): p is number {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nexport function isNumber(p: unknown): p is number {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport interface Headers {\n  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as type from './type';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(headers)) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (type.isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (type.isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Reference } from '../reference';\nimport { StorageService } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\n/**\n * @struct\n */\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!type.isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size: number | string | undefined\n  ): number | undefined {\n    if (type.isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: StorageService): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: StorageService,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = UrlUtils.makeUrl(urlPart);\n    const queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (const key in p) {\n    if (p.hasOwnProperty(key)) {\n      const val = p[key];\n      if (key === 'customMetadata') {\n        if (!type.isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (type.isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport * as json from './json';\nimport * as type from './type';\nimport { ListResult } from '../list';\nimport { StorageService } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst MAX_RESULTS_KEY = 'maxResults';\nconst MAX_MAX_RESULTS = 1000;\nconst PAGE_TOKEN_KEY = 'pageToken';\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: StorageService,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nexport function listOptionsValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (const key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (\n        !type.isInteger(p[MAX_RESULTS_KEY]) ||\n        (p[MAX_RESULTS_KEY] as number) <= 0\n      ) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if ((p[MAX_RESULTS_KEY] as number) > 1000) {\n        throw `Expected maxResults to be less than or equal to ${MAX_MAX_RESULTS}.`;\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !type.isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: StorageService,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(\n      service,\n      bucket,\n      text\n    );\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: StorageService,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: StorageService,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = MetadataUtils.toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: StorageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\nexport function multipartUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = MetadataUtils.toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = MetadataUtils.toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: StorageService,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: StorageService,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error | FirebaseStorageError) => void;\nexport type CompleteFn = () => void;\nexport type Unsubscribe = () => void;\n\nexport interface StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n}\n\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T> | null,\n  error?: ErrorFn | null,\n  complete?: CompleteFn | null\n) => Unsubscribe;\n\n/**\n * @struct\n */\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T> | null,\n    error?: ErrorFn | null,\n    complete?: CompleteFn | null\n  ) {\n    const asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(error) ||\n      type.isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as MetadataUtils from './metadata';\nimport * as ListOptionsUtils from './list';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(\n  name: string,\n  specs: ArgSpec[],\n  passed: IArguments\n): void {\n  let minArgs = specs.length;\n  const maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  const validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: unknown) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: unknown) => void, optional?: boolean) {\n    const self = this;\n    this.validator = function (p: unknown) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n}\n\nexport function and_(\n  v1: (p1: unknown) => void,\n  v2: (p1: unknown) => void\n): (p1: unknown) => void {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  validator?: (p1: unknown) => void | null,\n  optional?: boolean\n): ArgSpec {\n  function stringValidator(p: unknown): void {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, optional);\n}\n\nexport function listOptionSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(ListOptionsUtils.listOptionsValidator, optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  validator?: ((p1: unknown) => void) | null,\n  optional?: boolean\n): ArgSpec {\n  function isLooseObjectValidator(p: unknown): void {\n    const isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nexport function nullFunctionSpec(optional?: boolean): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { FirebaseStorageError, Code, canceled } from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport {\n  ArgSpec,\n  nullFunctionSpec,\n  looseObjectSpec,\n  stringSpec,\n  validate\n} from './implementation/args';\nimport { async as fbsAsync } from './implementation/async';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsRequests from './implementation/requests';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\nimport { StorageService } from './service';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private service_: StorageService;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Array<Observer<UploadTaskSnapshot>> = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<unknown> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    service: StorageService,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return loaded => this.updateProgress_(sizeBefore + loaded);\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_(): void {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.service_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.service_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_(): void {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.service_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_(): void {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.service_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.service_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number): void {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState): void {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | NextFn<UploadTaskSnapshot>\n      | StorageObserver<UploadTaskSnapshot>\n      | null,\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(): void {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = nullFunctionSpec(true).validator;\n    const observerValidator = looseObjectSpec(null, true).validator;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p: any): void {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      stringSpec(typeValidator),\n      looseObjectSpec(nextOrObserverValidator, true),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver?:\n          | NextFn<UploadTaskSnapshot>\n          | StorageObserver<UploadTaskSnapshot>\n          | null,\n        error?: ErrorFn | null,\n        complete?: CompleteFn | null\n      ): () => void {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: unknown): void {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      looseObjectSpec(binderNextOrObserverValidator),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: Error) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  }\n\n  private notifyObservers_(): void {\n    this.finishPromise_();\n    const observers = this.observers_.slice();\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_(): void {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as (p1: Error) => void;\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport {\n  StringFormat,\n  formatValidator,\n  dataFromString\n} from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { StorageService } from './service';\nimport { UploadTask } from './task';\nimport { ListOptions, ListResult } from './list';\nimport {\n  listOptionSpec,\n  stringSpec,\n  validate,\n  metadataSpec,\n  uploadDataSpec\n} from './implementation/args';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected service: StorageService, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(service: StorageService, location: Location): Reference {\n    return new Reference(service, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    validate('child', [stringSpec()], arguments);\n    const newPath = path.child(this.location.path, childPath);\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this.location.bucket, '');\n    return this.newRef(this.service, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): StorageService {\n    return this.service;\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value The string to upload.\n   * @param format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): UploadTask {\n    validate(\n      'putString',\n      [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = Object.assign({}, metadata);\n    if (\n      !type.isDef(metadataClone['contentType']) &&\n      type.isDef(data.contentType)\n    ) {\n      metadataClone['contentType'] = data.contentType!;\n    }\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadataClone\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.deleteObject(this.service, this.location);\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @return A Promise that resolves with all the items and prefixes under\n   *      the current storage reference. `prefixes` contains references to\n   *      sub-directories and `items` contains references to objects in this\n   *      folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<ListResult> {\n    validate('listAll', [], arguments);\n    const accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(() => accumulator);\n  }\n\n  private async listAllHelper(\n    accumulator: ListResult,\n    pageToken?: string\n  ): Promise<void> {\n    const opt: ListOptions = {\n      // maxResults is 1000 by default.\n      pageToken\n    };\n    const nextPage = await this.list(opt);\n    accumulator.prefixes.push(...nextPage.prefixes);\n    accumulator.items.push(...nextPage.items);\n    if (nextPage.nextPageToken != null) {\n      await this.listAllHelper(accumulator, nextPage.nextPageToken);\n    }\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure.\n   * Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options See ListOptions for details.\n   * @return A Promise that resolves with the items and prefixes.\n   *      `prefixes` contains references to sub-folders and `items`\n   *      contains references to objects in this folder. `nextPageToken`\n   *      can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<ListResult> {\n    validate('list', [listOptionSpec(true)], arguments);\n    const self = this;\n    return this.service.getAuthToken().then(authToken => {\n      const op = options || {};\n      const requestInfo = requests.list(\n        self.service,\n        self.location,\n        /*delimiter= */ '/',\n        op.pageToken,\n        op.maxResults\n      );\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getMetadata(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.updateMetadata(\n        this.service,\n        this.location,\n        metadata,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getDownloadUrl(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service\n        .makeRequest(requestInfo, authToken)\n        .getPromise()\n        .then(url => {\n          if (url === null) {\n            throw errorsExports.noDownloadURL();\n          }\n          return url;\n        });\n    });\n  }\n\n  private throwIfRoot_(name: string): void {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as backoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_!: (value?: T | PromiseLike<T> | undefined) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers): void {\n  const version =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  const queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport * as args from './implementation/args';\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseOptions } from '@firebase/app-types-exp';\nimport * as constants from '../src/implementation/constants';\nimport * as errorsExports from './implementation/error';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class StorageService {\n  private app_: FirebaseApp | null;\n  private readonly bucket_: Location | null = null;\n  private readonly internals_: ServiceInternals;\n  private readonly authProvider_: Provider<FirebaseAuthInternalName>;\n  private readonly appId_: string | null = null;\n  private readonly pool_: XhrIoPool;\n  private readonly requests_: Set<Request<unknown>>;\n  private deleted_: boolean = false;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n\n  constructor(\n    app: FirebaseApp | null,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    pool: XhrIoPool,\n    url?: string\n  ) {\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_(this.app_?.options);\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  private static extractBucket_(config?: FirebaseOptions): Location | null {\n    const bucketString = config?.[constants.CONFIG_STORAGE_BUCKET_KEY];\n    if (bucketString == null) {\n      return null;\n    }\n    return Location.makeFromBucketSpec(bucketString);\n  }\n\n  async getAuthToken(): Promise<string | null> {\n    const auth = this.authProvider_.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp(): void {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(request => request.cancel());\n    this.requests_.clear();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   * @param loc The Location.\n   * @return A firebaseStorage.Reference.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      const request = makeRequest(\n        requestInfo,\n        this.appId_,\n        authToken,\n        this.pool_\n      );\n      this.requests_.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this.requests_.delete(request),\n        () => this.requests_.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: unknown): void {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path as string)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    const ref = new Reference(this, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: unknown): void {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p as string)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p as string);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxUploadRetryTime_ = time;\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxOperationRetryTime_ = time;\n  }\n\n  get app(): FirebaseApp | null {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: StorageService;\n\n  constructor(service: StorageService) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   */\n  delete(): Promise<void> {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from './src/implementation/string';\nimport { TaskEvent, TaskState } from './src/implementation/taskenums';\n\nimport { XhrIoPool } from './src/implementation/xhriopool';\nimport { Reference } from './src/reference';\nimport { StorageService } from './src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from './package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  return (new StorageService(\n    app,\n    authProvider,\n    new XhrIoPool(),\n    url\n  ) as unknown) as types.FirebaseStorage;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageService,\n    Reference\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}